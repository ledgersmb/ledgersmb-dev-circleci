name: Docker Image CI

on: [push, pull_request, workflow_dispatch]

jobs:
  preFlight:
    name: "Preflight Checks"
    runs-on: ubuntu-latest
    steps:

    - name: Assert Secrets Present
      shell: bash
      run: |
        MD5() {
          result=($(md5sum <(echo "${1}")))
          echo $result
        }

        secretPresent() {
          emptyHash=$(MD5 "")
          secretHash=$(MD5 "${1}")
          ! diff <(echo $secretHash) <(echo $emptyHash) &> /dev/null
        }

        errorMessage() {
          echo "Your secret ${1} seems to be missing please contact the LedgerSMB team"
          return 1
        }

        secretStatus=0

        secretPresent "${{ secrets.DOCKER_TOKEN }}" || errorMessage "DOCKER_TOKEN" || secretStatus=1
        secretPresent "${{ secrets.DOCKER_TOKEN }}" || errorMessage "DOCKER_TOKEN" || secretStatus=2

        exit $secretStatus

    - run: echo "Everything Checks Out üëç"

  repository:
    runs-on: ubuntu-latest
    needs: preFlight
    outputs:
      hub: ${{ steps.docker_hub.outputs.hub }}
    steps:
      - name: Use proper Docker hub
        id: docker_hub
        shell: bash
        run: |
          if [ "${{ github.repository_owner }}" == "ledgersmb" ]; then
            echo ::set-output name=hub::ledgersmbdev
          else
            echo ::set-output name=hub::${{ github.repository_owner }}
          fi

  primary:
    runs-on: ubuntu-latest
    needs: repository
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build and push to Docker Hub
      uses: whoan/docker-build-with-cache-action@next
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        image_name: ${{needs.repository.outputs.hub}}/ledgersmb_circleci-primary
        image_tag: latest
        context: primary
        pull_image_and_stages: false
        push_image_and_stages: false

  perl:
    strategy:
      matrix:
        include:
          - version: "5.34"
            branches: "1.9,1.10,1.11,master"
          - version: "5.32"
            branches: "1.9,1.10,1.11"
          #- version: "5.30"
          #  branches: "1.9,1.10"
          #- version: "5.28"
          #  branches: "1.9"
    runs-on: ubuntu-latest
    needs: repository
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build and push to Docker Hub
      uses: whoan/docker-build-with-cache-action@next
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_TOKEN }}
        image_name: ${{needs.repository.outputs.hub}}/ledgersmb_circleci-perl
        image_tag: ${{ matrix.version }}
        build_extra_args: "--build-arg perl=${{ matrix.version }} --build-arg branches=${{ matrix.branches }}"
        context: perl
        pull_image_and_stages: false
        push_image_and_stages: false

  postgres:
    strategy:
      matrix:
        version: ['12', '13', '14']
    needs:
      - repository
      - primary
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build and push to Docker Hub
      uses: whoan/docker-build-with-cache-action@next
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_TOKEN }}
        image_name: ${{needs.repository.outputs.hub}}/ledgersmb_circleci-postgres
        image_tag: ${{ matrix.version }}
        build_extra_args: "--build-arg postgres=${{ matrix.version }}"
        context: postgres
        pull_image_and_stages: false
        push_image_and_stages: false
